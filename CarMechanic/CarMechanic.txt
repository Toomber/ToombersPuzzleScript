title Car Mechanic 
author Toomber
homepage www.puzzlescript.net

again_interval 0.05
key_repeat_interval 0.13
run_rules_on_level_start

========
OBJECTS
========

Background
LIGHTGREEN GREEN
11111
01111
11101
11111
10111

Wall
BROWN DARKBROWN
00010
11111
01000
11111
00010

DeadCar
transparent darkblue
.111.
1...1
1...1
1...1
.111.

CarUp
white transparent
.101.
11111
11111
11111
.111.

CarDown
white transparent
.111.
11111
11111
11111
.101.

CarRight
white transparent
.111.
11111
11110
11111
.111.


CarLeft
white transparent
.111.
11111
01111
11111
.111.

TagRed
darkred
.000.
00000
00000
00000
.000.

(breaks on impact)
TagBlue
blue
.000.
00000
00000
00000
.000.

TagNone
black
.000.
00000
00000
00000
.000.

(
CarUpBlue
white blue
.101.
11111
11111
11111
.111.

CarDownBlue
white blue
.111.
11111
11111
11111
.101.

CarRightBlue
white blue
.111.
11111
11110
11111
.111.


CarLeftBlue
white blue
.111.
11111
01111
11111
.111.
)

TrailRed
red

Stone 
grey

Target
orange
.....
.000.
.0.0.
.000.
.....

DoorOpen
orange
00000
0...0
0...0
0...0
00000

DoorClosed
orange

StartOpen
transparent

StartClosed
transparent

SwitchOn
purple

SwitchOff
red
00.00
0...0
.....
0...0
00.00

SwitchCounter
transparent

SwitchesOn
transparent

SwitchesOff
transparent


PivotSpawner1
transparent

PivotSpawner2
transparent

PivotSpawner3
transparent

PivotSpawner4
transparent

PivotRight
transparent

PivotLeft
transparent

NotTurning
transparent


=======
LEGEND
=======

U = CarUp and TagNone
D = CarDown and TagNone
R = CarRight and TagNone
L = CarLeft and TagNone
X = DeadCar and TagNone

q = CarUp and TagBlue
w = CarDown and TagBlue
e = CarRight and TagBlue
y = CarLeft and TagBlue
i = DeadCar and TagBlue

1 = CarUp and TagRed
2 = CarDown and TagRed
3 = CarRight and TagRed
4 = CarLeft and TagRed
5 = DeadCar and TagRed

Car = CarUp or CarDown or CarRight or CarLeft
Player = Car
. = Background
# = Wall
S = Stone

Pivot = PivotRight or PivotLeft
PivotSpawner = PivotSpawner1 or PivotSpawner2 or PivotSpawner3 or PivotSpawner4

Door = DoorOpen or DoorClosed
Switch = SwitchOn or SwitchOff
ActivatesSwitch = Car or DeadCar
6 = DoorClosed and StartClosed
7 = DoorOpen and StartOpen
8 = SwitchOff
9 = DoorClosed and StartClosed and DeadCar and TagBlue
h = DoorOpen and StartOpen and DeadCar and TagBlue
z = SwitchOff and DeadCar and TagBlue


StaticCollider = Wall or DoorClosed
Collider = Car or DeadCar or Wall or DoorClosed
Tag = TagBlue or TagRed or TagNone
t = TagRed

O = Target

=======
SOUNDS
=======

 TagBlue destroy 32872900

================
COLLISIONLAYERS
================

Background
Pivot, 
PivotSpawner1
PivotSpawner2
PivotSpawner3
PivotSpawner4
NotTurning
TrailRed
Stone
Target
SwitchCounter
SwitchesOn
SwitchesOff
StartOpen, StartClosed
Switch
DoorOpen
Tag
Player, Wall, DeadCar,
DoorClosed

======
RULES
======

(clear pivots)
[moving Car][Pivot] -> [moving Car][] 

(set pivot on edge car if start of turn)
right [right CarUp | ... | CarUp] -> [CarUp|...|CarUp]
left [left CarUp | ... | CarUp] -> [CarUp|...|CarUp]
[right CarUp] -> [PivotRight right CarUp]
[left CarUp] -> [PivotLeft left CarUp]

right [right CarDown | ... | CarDown] -> [CarDown|...|CarDown]
left [left CarDown | ... | CarDown] -> [CarDown|...|CarDown]
[right CarDown] -> [PivotLeft right CarDown]
[left CarDown] -> [PivotRight left CarDown]

up [up CarRight | ... | CarRight] -> [CarRight|...|CarRight]
down [down CarRight | ... | CarRight] -> [CarRight|...|CarRight]
[up CarRight] -> [PivotLeft up CarRight]
[down CarRight] -> [PivotRight down CarRight]

up [up CarLeft | ... | CarLeft] -> [CarLeft|...|CarLeft]
down [down CarLeft | ... | CarLeft] -> [CarLeft|...|CarLeft]
[up CarLeft] -> [PivotRight up CarLeft]
[down CarLeft] -> [PivotLeft down CarLeft]

(----- create X shape of Pivots -----)
right [moving Car][Pivot | ] -> [moving Car][Pivot | PivotSpawner1]
down  [moving Car][Pivot | ] -> [moving Car][Pivot | PivotSpawner2]
left  [moving Car][Pivot | ] -> [moving Car][Pivot | PivotSpawner3]
up  [moving Car][no PivotSpawner4 Pivot | ] -> [moving Car][ no PivotSpawner4 Pivot | PivotSpawner4 Pivot] (special to finish last branch)

up [Pivot][no Pivot | PivotSpawner1 | | ] -> [Pivot][no Pivot | PivotSpawner1 | Pivot | PivotSpawner1]
+ right [Pivot][ no Pivot | PivotSpawner1 | | ] -> [Pivot][no Pivot | PivotSpawner1 | Pivot | PivotSpawner1]

right [Pivot][no Pivot | PivotSpawner2 | | ] -> [Pivot][no Pivot | PivotSpawner2 | Pivot | PivotSpawner2]
+ down [Pivot][no Pivot | PivotSpawner2 | | ] -> [Pivot][no Pivot | PivotSpawner2 | Pivot | PivotSpawner2]

down [Pivot][no Pivot | PivotSpawner3 | | ] -> [Pivot][no Pivot | PivotSpawner3 | Pivot | PivotSpawner3]
+ left [Pivot][no Pivot | PivotSpawner3 | | ] -> [Pivot][no Pivot | PivotSpawner3 | Pivot | PivotSpawner3]

left [Pivot PivotSpawner4 | | ] -> [ | Pivot | PivotSpawner4] (special to finish last branch)
left [Pivot PivotSpawner4 | ] -> [ | Pivot ] (special to finish last branch, in case not enough room for PivotSpawner4)
left [Pivot][no Pivot | PivotSpawner4 | | ] -> [Pivot][no Pivot | PivotSpawner4 | Pivot | PivotSpawner4]
+ up[Pivot][no Pivot | PivotSpawner4 | | ] -> [Pivot][no Pivot | PivotSpawner4 | Pivot | PivotSpawner4]

[moving Car Pivot] -> [moving Car]

(clear PivotSpawners)
[PivotSpawner] -> []
(----------------------------)

(-------------------make turn-------------------)

[moving Car][ stationary CarUp ] -> [moving Car][ up CarUp] again
[moving Car][ stationary CarDown ] -> [moving Car][ down CarDown] again
[moving Car][ stationary CarRight ] -> [moving Car][ right CarRight] again
[moving Car][ stationary CarLeft ] -> [moving Car][ left CarLeft] again

[right CarUp] -> [stationary CarRight]
[left CarUp] -> [stationary CarLeft]

[right CarDown] -> [stationary CarRight]
[left CarDown] -> [stationary CarLeft]

[up CarRight] -> [stationary CarUp]
[down CarRight] -> [stationary CarDown]

[up CarLeft] -> [stationary CarUp]
[down CarLeft] -> [stationary CarDown]

[PivotRight stationary CarUp] -> [ PivotRight right CarRight] again
[PivotLeft stationary CarUp] -> [ PivotLeft left CarLeft] again

[PivotRight stationary CarDown] -> [ PivotRight left CarLeft] again
[PivotLeft stationary CarDown] -> [ PivotLeft right CarRight] again

[PivotRight stationary CarRight] -> [ PivotRight down CarDown] again
[PivotLeft stationary CarRight] -> [ PivotLeft up CarUp] again

[PivotRight stationary CarLeft] -> [ PivotRight up CarUp] again
[PivotLeft stationary CarLeft] -> [ PivotLeft down CarDown] again

horizontal [ CarUp | ... | Pivot ] -> [ up CarUp | ... | Pivot ] again
horizontal [ CarDown | ... | Pivot ] -> [ down CarDown | ... | Pivot ] again
vertical [ CarRight | ... | Pivot ] -> [ right CarRight | ... | Pivot ] again
vertical [ CarLeft | ... | Pivot ] -> [ left CarLeft | ... | Pivot ] again

(----------------------------)
(
(leave traila)
[moving Car no TrailRed no Stone TagRed] -> [moving Car TrailRed TagRed] 
[moving Car TrailRed TagNone] -> [moving Car TagNone] 
)


(push dead cars)
[ > Car | DeadCar ] -> [ > Car | > DeadCar]
[ > DeadCar | DeadCar ] -> [ > DeadCar | > DeadCar]
[ > DeadCar TagBlue | StaticCollider ] -> [ | StaticCollider]
[ > DeadCar | StaticCollider ] -> [ DeadCar | StaticCollider]
[ > DeadCar | stationary DeadCar ] -> [ stationary DeadCar | stationary DeadCar]

(kill cars)
[ > Car TagBlue | stationary Collider ] -> [ | stationary Collider]
[ > Car | stationary Collider ] -> [ DeadCar | stationary Collider]

(move tags)
[ moving Car Tag ] -> [moving Car moving Tag]
[ moving DeadCar Tag ] -> [moving DeadCar moving Tag]

(revive adjacent cars only if not turning)
[Car] -> [Car NotTurning]
[NotTurning][Pivot][moving Car] -> [][Pivot][moving Car]
late horizontal [NotTurning][ CarUp | DeadCar no TagRed] -> [NotTurning][ CarUp | CarUp ] 
late horizontal [NotTurning][ CarDown | DeadCar no TagRed] -> [NotTurning][ CarDown | CarDown ] 
late vertical [NotTurning][ CarRight | DeadCar no TagRed] -> [NotTurning][ CarRight | CarRight ] 
late vertical [NotTurning][ CarLeft | DeadCar no TagRed] -> [NotTurning][ CarLeft | CarLeft ] 
late [NotTurning] -> []

(-------------toggle doors-------------)
late [Switch] -> [SwitchOff]
late[Switch ActivatesSwitch] -> [SwitchOn ActivatesSwitch]
late [SwitchOn] -> [SwitchOn SwitchCounter]
late random [SwitchOn] -> [SwitchesOff SwitchOn]

late[SwitchCounter][SwitchesOff] -> [][SwitchesOn]
+late[SwitchCounter][SwitchesOn] -> [][SwitchesOff]
late[SwitchesOff] -> [] 

late [Door StartOpen] -> [DoorOpen StartOpen]
late [Door StartClosed] -> [DoorClosed StartClosed] 

late [SwitchesOn][Door StartOpen] -> [SwitchesOn][DoorClosed StartOpen]
late [SwitchesOn][Door StartClosed] -> [SwitchesOn][DoorOpen StartClosed] 
late[SwitchesOn] -> [] 

(deal with objects in closing doors - kill blue and prevent closing on others)

late [Car TagBlue DoorClosed] -> [DoorClosed]
late [DeadCar TagBlue DoorClosed] -> [DoorClosed]
late [Tag DoorClosed] -> [Tag DoorOpen]
(-------------------------------------)

==============
WINCONDITIONS
==============

All Target on Tag

=======
LEVELS
=======

(level flow:
Only Blue
	Use Targets and Move
    Turn around / go backward
    make holes in line of cars
    
Blue and dead red cars (ie. crates)
Alive red cars
Alive red and blue cars
Alive red and unawoken blue cars
Black Cars

)


############
#..........#
#..........#
#.......oo.#
#..........#
#..........#
#..qq..#####
#......#####
############ (basic movement + win condition)


#################
#.........#.....#
#.........#.....#
#...www...#..o..#
#.........#.....#
#.........#.....#
#.........###.###
#.........#.....#
#...............#
#...............#
#.........#.....#
################# (movement w/ 3 cars + killing cars)(ok)

##############
#...........y#
#...........y#
#........o..y#
#...##########
#...#....o...#
#...#........#
#...#........#
#...#....#...#
#...######...#
#............#
#............#
#............#
############## (removing middle car)(good)

(------------ teach turning + going backwards --------------)

##############
#####....#####
##..........##
#............#
#............#
#............#
#oooo.##.....#
#########....#
#wwww.##.....#
#............#
#............#
#............#
##..........##
############## (good?)

###########
#.....#...#
#.....#...#
#.o.o.#...#
#.........#
#.........#
####......#
#.........#
#.....q.q.#
#.........#
###########  (ok, requires backwards movement)

(--------------------------)

(------------ fitting through stuff --------------)

###########
#...o#o...#
#.........#
#.........#
#.........#
#..#####..#
#.........#
#..#####..#
#.........#
#.........#
#.........#
#...qqq...#
########### (ok)(teaches breaking when turning)

###########
#....#....#
#..#...#..#
#e...#...o#
#e........#
#e...#...o#
#..#...#..#
#....#....#
###########







#############
#e.........o#
#.#.###.#.#.#
#e#.....#.#o#
#.#.###.#.#.#
#...........#
#...#.###.#.#
#.#.#.....#.#
#...#.###.#.#
#...........#
############# (pretty good)

#########
#.....#.#
#.###.#.#
#.#w.w..#
#.###.#.#
#.....#.#
#..o..#.#
#.#.#.#.#
#.#o#...#
#.###...#
#.......#
######### (ok, backwards movement as switching parity. Would be nice if more open.)









#############
#....o#o.o..#
###...#.....#
#...........#
###.#.#.#.#.#
#...........#
#.....#.#.#.#
#.....#.#.#.#
#.....#.#.#.#
#.....#.#.#.#
#.....#.#.#.#
#qqqqq#.#.#.#
############# (ok)

###########
#....#....#
#..#......#
#.......o.#
#.........#
#.#...#.o.#
#.........#
#.qqqq....#
###########

##################
#................#
#....#.#.#.#.###.#
#................#
#....#.###.#.#.#.#
#e............o..#
#....#.#.#.#.#.#.#
#e.........#..o..#
#....#.#.#.#.#.#.#
#e............o..#
#....###.#.#.###.#
#................#
#....#.#.#.#.#.#.#
#................#
################## (bad, a bit annoying maybe)


(how to make a deductive level using this?
-maze?
-some moves are not reversible (turns)
-more cars are always better here (assuming in same positions). If different positions, not so - could have player sacrifice some cars early so as to keep more later

problem parameters: wall locations, target locations, starting car locations/number
solution parameters: which cars are deleted, car positions
)



(--------------------------)


########
#......#
#....oo#
#.5....#
#......#
#....5.#
#oo....#
#..qq..#
######## (ok)

########
#....###
#.o....#
#.o5...#
#.o5#qq#
#.o5...#
#.o....#
#....###
######## (ok)

#######
#....o#
#.o5.o#
#.5o..#
#.o5.y#
#....y#
####### (push multiple blocks) (ok)

#######
#ww####
#...o.#
#o5.5.#
##o#..#
##....#
##.5.o#
##...o#
####### (push on both moves of turn, cars must go on adjacent targets)(good)

#######
#.ooo.#
#.....#
#..5..#
#...o.#
#.o5..#
#.....#
#.qqq.#
####### (pushing with 3 cars)(ok)

#####
#www#
#...#
#o.o#
#.o.#
#5.5#
#...#
#...#
##### (make narrower from wall) (pretty good)

#########
#o.o#####
#.o.#####
#...#www#
#.5.#...#
#...#...#
#.......#
#.......#
#.......#
######### (make hole from wall) (good)



########
##....##
#.5.5.##
##o...##
##.e..##
##oe..##
##oe.###
##o...##
########

(------------make hole from block--------------)
#########
#..o.o..#
#.......#
#.......#
##..5..##
##.....##
##.qqq.##
##..o..##
######### (hard but maybe not fun?)


#########
####.####
##.o.o.##
###5.5###
##.....##
##..o..##
##.....##
#...5...#
#o.....o#
#..qqq..#
##.....##
######### (good, also uses deduction that only targets close enough for cars are top ones)
		  (do I want it to be difficult to place red car in middle because of ordering?)

(--------------------------)

###########
#.........#
#....#....#
#....#....#
#....#....#
#....5....#
#....#....#
#..o.#.o..#
#....#....#
#.o..5..o.#
#....#....#
#....#....#
#....#....#
#..q...q..#
###########




###########
#....#....#
#.3..#..o.#
#.3.....o.#
#.3..#..o.#
#....#....#
###########

#####
#.o.#
#.o.#
#...#
##.##
#...#
#.3.#
#.3.#
#####

#########
#...o...#
#.......#
#.......#
#o..#..o#
#.......#
#..111..#
#.......#
######### (break cars off on centre wall)

###########
#.o.....o.#
#.........#
#..22222..#
#.........#
#.........#
#...ooo...#
########### (break red cars off on walls)



#############
#.....#####.#
#.....#####o#
#.....#####.#
#..3.iiiiiii#
#.....#####.#
#.....#####.#
#.....#####.#
############# ("dead" blues die on walls)

#############
####.o.o.####
####.....####
####o...o####
####.ooo.####
####.....####
####o...o####
####.....####
####.i.i.####
######.######
#...........#
#...........#
#..5i5q5i5..#
#...........#
#...........#
############# (choose order of cars before pushing through)

###########
#.....#...#
#.....#ooo#
#..i..#...#
#.....#...#
#..i......#
#.....#.2.#
#..i..#...#
#....###.##
#....#oi..#
#.........#
#....#....#
########### (needs work)

#############
#.....w.....#
#...........#
#..iii.555..#
#...........#
#..ooo.ooo..#
######.######
######.o#####
############# (push blue w/ red to avoid joining with them)

#############
#.....##....#
#..##.##.##.#
#o.##5##.##.#
#o3.i.i.....#
#o.##.##.####
#..##.##.####
#..##....####
############# (sandwich red between blues. Start w/ red then go blue)

################
####..##########
#.....##....####
#..##.##.##.####
##.##.##.##.####
##.i..i..i..4..#
##.##.##.##.####
##.##.##.##.####
##.##.......####
################

###############
######.o.######
#.o.........o.#
#..####.####..#
##.####.####.##
##.####.####.##
##.####.####.##
##..ii...i...##
#######.####.##
#######4....o##
###############

#############
#####.o######
#......######
#..###.######
##.###.######
##.i..i..io4#
######.######
######o######
######o######
#############





#############
#ooo#oo#o#..#
#i5i#ii#5#..#
#...........#
#...........#
#.........###
#.........5o#
#.........io#
#......3..io#
#.........io#
#.........###
#.........io#
############# (different numbers work for different holes--not really a level yet)




#######
#.....#
#.###.#
#.###.#
#.###.#
#..#..#
#uu#oo#
####### (blck cars can go through one-wide passages)





#########
#..www..#
#.......#
#.5...5.#
#.5ooo5.#
#.5ooo5.#
#.5...5.#
#.o555o.#
#.o...o.#
#.o...o.#
#.o...o.#
######### (idk)

##############
#............#
#............#
#............#
#............#
#..o.i.......#
#..o.i....o..#
#..o.ix...o..#
#..o.iiii....#
#............#
#....oooo....#
#..........l.#
#............#
##############

##############
#............#
#............#
#....oooo....#
#............#
#..o.iiii....#
#..o.i....o..#
#..o.ix...o..#
#..o.iiii....#
#............#
#....oooo....#
#..........l.#
#............#
##############

#############
#...........#
#.......x..O#
#..........O#
#...#x.....O#
#..........O#
#........x.O#
#...........#
#...........#
#...uu......#
#...........#
#############

#######
#.....#
#.....#
#..x..#
#.x#x.#
#..d..#
#.....#
#OO.OO#
####### (needs work)

#####
#x.x#
#x.x#
#x.x#
#x.x#
#x.x#
#x.x#
#uuu#
#####


#########
#.......#
#.#.#.#.#
#..r....#
#.#.#.#.#
#..r....#
#.#.#.#.#
#.......#
#########

#############
#..........o#
#..........o#
#..........o#
#...........#
#.....#.....#
#.....o.....#
#..........o#
#..........o#
#....uuu...o#
##...###...##
##i.i###i.i##
############# (good but tricky)

###########
#....#....#
#.e.......#
#.3.......#
#.r.......#
#....#....#
###########

#####
#e..#
#r..#
#r..#
#.###
#...#
#ooo#
#####

###########
#.........#
#.#.#.i...#
#...#.....#
###o#..i..#
###o#1....#
###########









(---------------doors---------------)


#########
#..o....#
#.......#
#.....8.#
###6##7##
#.......#
#..8....#
#....q1.#
#.......#
#########

#########
#.......#
#.......#
#....3..#
#....3..#
#.68....#
#.......#
#.......#
#.......#
#########

#############
#...........#
#...........#
#..8888888..#
#..8.....8..#
#..88888.8..#
#......8.8..#
#..888.8.8..#
#..8.8.8.8..#
#.qz.888.89.#
#...........#
#.......ooo.#
#############

#############
#....ooo....#
#.....o.....#
#...........#
#...........#
######z######
######.######
######6######
#...........#
#...........#
#..i..1..i..#
#...........#
#...........#
#############

###########
#....#....#
#.8x.7..8.#
#....#....#
#....#..u.#
##7#####6##
#....#....#
#.x..6.o..#
#....#....#
###########

#########
###...###
#86...7o#
###...###
####6####
#.......#
#.5.5.8.#
#...1...#
#########

############
#.o..#######
#....#######
##77########
#.88...#...#
#........x.#
#..u...#...#
############ (2 === 0)

#########
##.h.####
#.....###
#ox.r.8o#
#o....8o#
#ox.x.###
#.....###
#########(push blocks at same time, needs work)



